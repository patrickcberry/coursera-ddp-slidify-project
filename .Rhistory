library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
str(Bodyweight)
str(BodyWeight)
?text
?points
?lpoints
?axis
?trellis.par.set
?par
?splom
options(rpubs.upload.method = "internal")
file.edit('~/.Rprofile')
source('~/.Rprofile')
install.packages(c("BH", "devtools", "Hmisc", "jsonlite", "KernSmooth", "knitr", "manipulate", "markdown", "mime", "plyr", "Rcpp", "RCurl", "rmarkdown", "roxygen2", "rstudioapi", "stabledist", "stringr", "testthat", "VGAM"))
data(mtcars)
library(ggplot2)
qplot(gear, mpg, data=mtcars, geom=c("boxplot", "jitter"),
fill=gear, main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon")
mtcars$gear <- factor(mtcars$gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
mtcars$am <- factor(mtcars$am,levels=c(0,1),
labels=c("Automatic","Manual"))
mtcars$cyl <- factor(mtcars$cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
# Kernel density plots for mpg
# grouped by number of gears (indicated by color)
qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
# Scatterplot of mpg vs. hp for each combination of gears and cylinders
# in each facet, transmittion type is represented by shape and color
qplot(hp, mpg, data=mtcars, shape=am, color=am,
facets=gear~cyl, size=I(3),
xlab="Horsepower", ylab="Miles per Gallon")
# Separate regressions of mpg on weight for each number of cylinders
qplot(wt, mpg, data=mtcars, geom=c("point", "smooth"),
method="lm", formula=y~x, color=cyl,
main="Regression of MPG on Weight",
xlab="Weight", ylab="Miles per Gallon")
# Boxplots of mpg by number of gears
# observations (points) are overlayed and jittered
qplot(gear, mpg, data=mtcars, geom=c("boxplot", "jitter"),
fill=gear, main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon")
qplot(mpg, data=mtcars, geom="density", fill=gear, alpha=I(.5),
main="Distribution of Gas Milage", xlab="Miles Per Gallon",
ylab="Density")
qplot(hp, mpg, data=mtcars, shape=am, color=am,
facets=gear~cyl, size=I(3),
xlab="Horsepower", ylab="Miles per Gallon")
qplot(wt, mpg, data=mtcars, geom=c("point", "smooth"),
method="lm", formula=y~x, color=cyl,
main="Regression of MPG on Weight",
xlab="Weight", ylab="Miles per Gallon")
p <- qplot(hp, mpg, data=mtcars, shape=am, color=am,
facets=gear~cyl, main="Scatterplots of MPG vs. Horsepower",
xlab="Horsepower", ylab="Miles per Gallon")
# White background and black grid lines
p + theme_bw()
# Large brown bold italics labels
# and legend placed at top of plot
p + theme(axis.title=element_text(face="bold.italic",
size="12", color="brown"), legend.position="top")
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
library(rCharts)
require(devtools)
install_git('rCharts','ramnathv')
require(devtools)
install_github('rCharts', 'ramnathv')
require(datasets)
require(rCharts)
dTable(airquality, sPaginationType = "full_numbers")
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
d <- data.frame(airquality, stringsAsFactors = FALSE)
print(d)
setwd("C:/Users/patrick.berry/Desktop/Coursera/Developing Data Products/project/shiny")
setwd("C:/Users/patrick.berry/Desktop/Coursera/Developing Data Products/project/slidify")
library(slidify)
author('LoanCalculator')
slidify('index.Rmd')
slidify('index.Rmd')
install.packages(c("quantmod", "Rcpp"))
library(slidify)
library(knitr)
slidify('index.Rmd')
slidify('index.Rmd')
install_version("stringr", version="0.6.2")
library(devtools)
install_version("stringr", version="0.6.2")
library(knitr)
library(slidify)
slidify('index.Rmd')
install_version("stringr", version="0.6.2", type = "source")
install_github('ramnathv/slidify', ref = github_pull(425))
library(slidify)
slidify('index.Rmd')
## Slide 5
slidify('index.Rmd')
slidify('index.Rmd')
publish_github('patrickcberry','coursera-ddp-slidify-project')
publish_github('coursera-ddp-slidify-project','patrickcberry')
publish_github('patrickcberr/coursera-ddp-slidify-project','')
publish_github('patrickcberry/coursera-ddp-slidify-project','')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
